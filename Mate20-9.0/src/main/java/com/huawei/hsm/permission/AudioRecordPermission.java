package com.huawei.hsm.permission;

import android.app.ActivityThread;
import android.content.Context;
import android.os.Binder;
import android.util.Log;
import com.huawei.hsm.permission.monitor.PermRecordHandler;

public class AudioRecordPermission {
    private static final String TAG = "AudioRecordPermission";
    private static final byte[] mp3Data = {0, 0, 0, 28, 102, 116, 121, 112, 109, 112, 52, 50, 0, 0, 0, 1, 105, 115, 111, 109, 109, 112, 52, 50, 51, 103, 112, 53, 0, 0, 6, 94, 109, 111, 111, 118, 0, 0, 0, 108, 109, 118, 104, 100, 0, 0, 0, 0, -51, 117, -107, -25, -51, 117, -107, -25, 0, 0, 2, 88, 0, 0, 2, 88, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 33, 105, 111, 100, 115, 0, 0, 0, 0, 16, 19, 0, 79, 1, 1, 40, -1, 1, 14, 4, 0, 0, 0, 1, 14, 4, 0, 0, 0, 2, 0, 0, 1, -52, 116, 114, 97, 107, 0, 0, 0, 92, 116, 107, 104, 100, 0, 0, 0, 1, -51, 117, -107, -25, -51, 117, -107, -25, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 1, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 116, 114, 101, 102, 0, 0, 0, 12, 115, 121, 110, 99, 0, 0, 0, 1, 0, 0, 1, 84, 109, 100, 105, 97, 0, 0, 0, 32, 109, 100, 104, 100, 0, 0, 0, 0, -51, 117, -107, -25, -51, 117, -107, -25, 0, 0, 31, 64, 0, 0, 16, 0, 85, -60, 0, 0, 0, 0, 0, 33, 104, 100, 108, 114, 0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 11, 109, 105, 110, 102, 0, 0, 0, 16, 115, 109, 104, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 100, 105, 110, 102, 0, 0, 0, 28, 100, 114, 101, 102, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1, 0, 0, 0, -49, 115, 116, 98, 108, 0, 0, 0, 91, 115, 116, 115, 100, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 75, 109, 112, 52, 97, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 16, 0, 0, 0, 0, 31, 64, 0, 0, 0, 0, 0, 39, 101, 115, 100, 115, 0, 0, 0, 0, 3, 25, 0, 0, 0, 4, 17, 64, 21, 0, 0, 48, 0, 0, 0, 0, 0, 0, 4, 0, 5, 2, 21, -120, 6, 1, 2, 0, 0, 0, 24, 115, 116, 116, 115, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 4, 0, 0, 0, 0, 28, 115, 116, 115, 99, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 36, 115, 116, 115, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 48, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 20, 115, 116, 99, 111, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 6, -126, 0, 0, 1, -60, 116, 114, 97, 107, 0, 0, 0, 92, 116, 107, 104, 100, 0, 0, 0, 1, -51, 117, -107, -25, -51, 117, -107, -25, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 116, 114, 101, 102, 0, 0, 0, 12, 115, 121, 110, 99, 0, 0, 0, 1, 0, 0, 0, 12, 109, 112, 111, 100, 0, 0, 0, 101, 0, 0, 1, 64, 109, 100, 105, 97, 0, 0, 0, 32, 109, 100, 104, 100, 0, 0, 0, 0, -51, 117, -107, -25, -51, 117, -107, -25, 0, 0, 2, 88, 0, 0, 2, 88, 85, -60, 0, 0, 0, 0, 0, 55, 104, 100, 108, 114, 0, 0, 0, 0, 0, 0, 0, 0, 111, 100, 115, 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 80, 65, 67, 32, 77, 80, 69, 71, 45, 52, 32, 79, 68, 32, 72, 97, 110, 100, 108, 101, 114, 0, 0, 0, 0, -31, 109, 105, 110, 102, 0, 0, 0, 12, 110, 109, 104, 100, 0, 0, 0, 0, 0, 0, 0, 36, 100, 105, 110, 102, 0, 0, 0, 28, 100, 114, 101, 102, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1, 0, 0, 0, -87, 115, 116, 98, 108, 0, 0, 0, 69, 115, 116, 115, 100, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 53, 109, 112, 52, 115, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 37, 101, 115, 100, 115, 0, 0, 0, 0, 3, 23, 0, 0, 0, 4, 15, 1, 5, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 6, 1, 2, 0, 0, 0, 24, 115, 116, 116, 115, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 2, 88, 0, 0, 0, 28, 115, 116, 115, 99, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 20, 115, 116, 115, 122, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 1, 0, 0, 0, 20, 115, 116, 99, 111, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 6, -60, 0, 0, 1, -70, 116, 114, 97, 107, 0, 0, 0, 92, 116, 107, 104, 100, 0, 0, 0, 1, -51, 117, -107, -25, -51, 117, -107, -25, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 86, 109, 100, 105, 97, 0, 0, 0, 32, 109, 100, 104, 100, 0, 0, 0, 0, -51, 117, -107, -25, -51, 117, -107, -25, 0, 0, 2, 88, 0, 0, 2, 88, 85, -60, 0, 0, 0, 0, 0, 70, 104, 100, 108, 114, 0, 0, 0, 0, 0, 0, 0, 0, 115, 100, 115, 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 80, 65, 67, 32, 77, 80, 69, 71, 45, 52, 32, 83, 99, 101, 110, 101, 32, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 32, 72, 97, 110, 100, 108, 101, 114, 0, 0, 0, 0, -24, 109, 105, 110, 102, 0, 0, 0, 12, 110, 109, 104, 100, 0, 0, 0, 0, 0, 0, 0, 36, 100, 105, 110, 102, 0, 0, 0, 28, 100, 114, 101, 102, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1, 0, 0, 0, -80, 115, 116, 98, 108, 0, 0, 0, 76, 115, 116, 115, 100, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 60, 109, 112, 52, 115, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 44, 101, 115, 100, 115, 0, 0, 0, 0, 3, 30, 0, 0, 0, 4, 22, 2, 13, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 5, 7, 0, 0, 112, 0, 0, 0, 0, 6, 1, 2, 0, 0, 0, 24, 115, 116, 116, 115, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 2, 88, 0, 0, 0, 28, 115, 116, 115, 99, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 20, 115, 116, 115, 122, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 20, 115, 116, 99, 111, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 6, -50, 0, 0, 0, Byte.MAX_VALUE, 117, 100, 116, 97, 0, 0, 0, 119, 109, 101, 116, 97, 0, 0, 0, 0, 0, 0, 0, 33, 104, 100, 108, 114, 0, 0, 0, 0, 0, 0, 0, 0, 109, 100, 105, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 74, 105, 108, 115, 116, 0, 0, 0, 66, -87, 116, 111, 111, 0, 0, 0, 58, 100, 97, 116, 97, 0, 0, 0, 1, 0, 0, 0, 0, 89, 97, 109, 98, 32, 50, 46, 49, 46, 48, 46, 48, 32, 91, 104, 116, 116, 112, 58, 47, 47, 121, 97, 109, 98, 46, 117, 110, 105, 116, 101, 45, 118, 105, 100, 101, 111, 46, 99, 111, 109, 93, 0, 0, 0, 92, 109, 100, 97, 116, -34, 54, 0, 0, 108, 105, 98, 102, 97, 97, 99, 32, 49, 46, 50, 54, 46, 49, 32, 40, 65, 117, 103, 32, 49, 54, 32, 50, 48, 48, 56, 41, 32, 85, 78, 83, 84, 65, 66, 76, 69, 0, 0, 1, -112, 1, 0, 71, 0, -56, 0, Byte.MIN_VALUE, 35, Byte.MIN_VALUE, 0, -56, 0, Byte.MIN_VALUE, 35, Byte.MIN_VALUE, 0, -56, 0, Byte.MIN_VALUE, 35, Byte.MIN_VALUE, 1, 8, 17, 6, 2, -97, 15, 2, 0, 1, -64, 16, 18, -127, 48, 42, 5, 124, 0, 0, 0, 55, 102, 114, 101, 101, 73, 115, 111, 77, 101, 100, 105, 97, 32, 70, 105, 108, 101, 32, 80, 114, 111, 100, 117, 99, 101, 100, 32, 119, 105, 116, 104, 32, 71, 80, 65, 67, 32, 48, 46, 52, 46, 54, 45, 68, 69, 86, 45, 114, 101, 118, 0};
    private boolean mBlocked = false;
    private Context mContext = ActivityThread.currentApplication();
    private int mPid = Binder.getCallingPid();
    private int mUid = Binder.getCallingUid();

    public AudioRecordPermission() {
        Log.d(TAG, TAG);
    }

    private void recordPermissionUsed() {
        PermRecordHandler mPermRecHandler = PermRecordHandler.getHandleInstance();
        if (mPermRecHandler != null) {
            mPermRecHandler.accessPermission(this.mUid, this.mPid, 128, null);
        }
    }

    public void remind() {
        if (!StubController.checkPrecondition(this.mUid)) {
            recordPermissionUsed();
        } else if (this.mContext == null || StubController.isGlobalSwitchOn(this.mContext, 128)) {
            int selectionResult = StubController.holdForGetPermissionSelection(128, this.mUid, this.mPid, null);
            if (selectionResult == 0) {
                Log.e(TAG, "AudioRecordPermission holdForGetPermissionSelection error");
                return;
            }
            if (2 == selectionResult) {
                this.mBlocked = true;
            }
        }
    }

    public boolean remindWithResult() {
        remind();
        Log.i(TAG, "remindWithResult:" + this.mBlocked);
        return !this.mBlocked;
    }

    public static byte[] getData() {
        return (byte[]) mp3Data.clone();
    }
}
