package com.android.org.bouncycastle.crypto.engines;

import com.android.org.bouncycastle.crypto.BlockCipher;
import com.android.org.bouncycastle.crypto.CipherParameters;
import com.android.org.bouncycastle.crypto.DataLengthException;
import com.android.org.bouncycastle.crypto.OutputLengthException;
import com.android.org.bouncycastle.crypto.params.KeyParameter;

public final class BlowfishEngine implements BlockCipher {
    private static final int BLOCK_SIZE = 8;
    private static final int[] KP = {608135816, -2052912941, 320440878, 57701188, -1542899678, 698298832, 137296536, -330404727, 1160258022, 953160567, -1101764913, 887688300, -1062458953, -914599715, 1065670069, -1253635817, -1843997223, -1988494565};
    private static final int[] KS0;
    private static final int[] KS1;
    private static final int[] KS2;
    private static final int[] KS3;
    private static final int P_SZ = 18;
    private static final int ROUNDS = 16;
    private static final int SBOX_SK = 256;
    private final int[] P = new int[18];
    private final int[] S0 = new int[SBOX_SK];
    private final int[] S1 = new int[SBOX_SK];
    private final int[] S2 = new int[SBOX_SK];
    private final int[] S3 = new int[SBOX_SK];
    private boolean encrypting = false;
    private byte[] workingKey = null;

    static {
        int[] iArr = new int[SBOX_SK];
        // fill-array-data instruction
        iArr[0] = -785314906;
        iArr[1] = -1730169428;
        iArr[2] = 805139163;
        iArr[3] = -803545161;
        iArr[4] = -1193168915;
        iArr[5] = 1780907670;
        iArr[6] = -1166241723;
        iArr[7] = -248741991;
        iArr[8] = 614570311;
        iArr[9] = -1282315017;
        iArr[10] = 134345442;
        iArr[11] = -2054226922;
        iArr[12] = 1667834072;
        iArr[13] = 1901547113;
        iArr[14] = -1537671517;
        iArr[15] = -191677058;
        iArr[16] = 227898511;
        iArr[17] = 1921955416;
        iArr[18] = 1904987480;
        iArr[19] = -2112533778;
        iArr[20] = 2069144605;
        iArr[21] = -1034266187;
        iArr[22] = -1674521287;
        iArr[23] = 720527379;
        iArr[24] = -976113629;
        iArr[25] = 677414384;
        iArr[26] = -901678824;
        iArr[27] = -1193592593;
        iArr[28] = -1904616272;
        iArr[29] = 1614419982;
        iArr[30] = 1822297739;
        iArr[31] = -1340175810;
        iArr[32] = -686458943;
        iArr[33] = -1120842969;
        iArr[34] = 2024746970;
        iArr[35] = 1432378464;
        iArr[36] = -430627341;
        iArr[37] = -1437226092;
        iArr[38] = 1464375394;
        iArr[39] = 1676153920;
        iArr[40] = 1439316330;
        iArr[41] = 715854006;
        iArr[42] = -1261675468;
        iArr[43] = 289532110;
        iArr[44] = -1588296017;
        iArr[45] = 2087905683;
        iArr[46] = -1276242927;
        iArr[47] = 1668267050;
        iArr[48] = 732546397;
        iArr[49] = 1947742710;
        iArr[50] = -832815594;
        iArr[51] = -1685613794;
        iArr[52] = -1344882125;
        iArr[53] = 1814351708;
        iArr[54] = 2050118529;
        iArr[55] = 680887927;
        iArr[56] = 999245976;
        iArr[57] = 1800124847;
        iArr[58] = -994056165;
        iArr[59] = 1713906067;
        iArr[60] = 1641548236;
        iArr[61] = -81679983;
        iArr[62] = 1216130144;
        iArr[63] = 1575780402;
        iArr[64] = -276538019;
        iArr[65] = -377129551;
        iArr[66] = -601480446;
        iArr[67] = -345695352;
        iArr[68] = 596196993;
        iArr[69] = -745100091;
        iArr[70] = 258830323;
        iArr[71] = -2081144263;
        iArr[72] = 772490370;
        iArr[73] = -1534844924;
        iArr[74] = 1774776394;
        iArr[75] = -1642095778;
        iArr[76] = 566650946;
        iArr[77] = -152474470;
        iArr[78] = 1728879713;
        iArr[79] = -1412200208;
        iArr[80] = 1783734482;
        iArr[81] = -665571480;
        iArr[82] = -1777359064;
        iArr[83] = -1420741725;
        iArr[84] = 1861159788;
        iArr[85] = 326777828;
        iArr[86] = -1170476976;
        iArr[87] = 2130389656;
        iArr[88] = -1578015459;
        iArr[89] = 967770486;
        iArr[90] = 1724537150;
        iArr[91] = -2109534584;
        iArr[92] = -1930525159;
        iArr[93] = 1164943284;
        iArr[94] = 2105845187;
        iArr[95] = 998989502;
        iArr[96] = -529566248;
        iArr[97] = -2050940813;
        iArr[98] = 1075463327;
        iArr[99] = 1455516326;
        iArr[100] = 1322494562;
        iArr[101] = 910128902;
        iArr[102] = 469688178;
        iArr[103] = 1117454909;
        iArr[104] = 936433444;
        iArr[105] = -804646328;
        iArr[106] = -619713837;
        iArr[107] = 1240580251;
        iArr[108] = 122909385;
        iArr[109] = -2137449605;
        iArr[110] = 634681816;
        iArr[111] = -152510729;
        iArr[112] = -469872614;
        iArr[113] = -1233564613;
        iArr[114] = -1754472259;
        iArr[115] = 79693498;
        iArr[116] = -1045868618;
        iArr[117] = 1084186820;
        iArr[118] = 1583128258;
        iArr[119] = 426386531;
        iArr[120] = 1761308591;
        iArr[121] = 1047286709;
        iArr[122] = 322548459;
        iArr[123] = 995290223;
        iArr[124] = 1845252383;
        iArr[125] = -1691314900;
        iArr[126] = -863943356;
        iArr[127] = -1352745719;
        iArr[128] = -1092366332;
        iArr[129] = -567063811;
        iArr[130] = 1712269319;
        iArr[131] = 422464435;
        iArr[132] = -1060394921;
        iArr[133] = 1170764815;
        iArr[134] = -771006663;
        iArr[135] = -1177289765;
        iArr[136] = 1434042557;
        iArr[137] = 442511882;
        iArr[138] = -694091578;
        iArr[139] = 1076654713;
        iArr[140] = 1738483198;
        iArr[141] = -81812532;
        iArr[142] = -1901729288;
        iArr[143] = -617471240;
        iArr[144] = 1014306527;
        iArr[145] = -43947243;
        iArr[146] = 793779912;
        iArr[147] = -1392160085;
        iArr[148] = 842905082;
        iArr[149] = -48003232;
        iArr[150] = 1395751752;
        iArr[151] = 1040244610;
        iArr[152] = -1638115397;
        iArr[153] = -898659168;
        iArr[154] = 445077038;
        iArr[155] = -552113701;
        iArr[156] = -717051658;
        iArr[157] = 679411651;
        iArr[158] = -1402522938;
        iArr[159] = -1940957837;
        iArr[160] = 1767581616;
        iArr[161] = -1144366904;
        iArr[162] = -503340195;
        iArr[163] = -1192226400;
        iArr[164] = 284835224;
        iArr[165] = -48135240;
        iArr[166] = 1258075500;
        iArr[167] = 768725851;
        iArr[168] = -1705778055;
        iArr[169] = -1225243291;
        iArr[170] = -762426948;
        iArr[171] = 1274779536;
        iArr[172] = -505548070;
        iArr[173] = -1530167757;
        iArr[174] = 1660621633;
        iArr[175] = -823867672;
        iArr[176] = -283063590;
        iArr[177] = 913787905;
        iArr[178] = -797008130;
        iArr[179] = 737222580;
        iArr[180] = -1780753843;
        iArr[181] = -1366257256;
        iArr[182] = -357724559;
        iArr[183] = 1804850592;
        iArr[184] = -795946544;
        iArr[185] = -1345903136;
        iArr[186] = -1908647121;
        iArr[187] = -1904896841;
        iArr[188] = -1879645445;
        iArr[189] = -233690268;
        iArr[190] = -2004305902;
        iArr[191] = -1878134756;
        iArr[192] = 1336762016;
        iArr[193] = 1754252060;
        iArr[194] = -774901359;
        iArr[195] = -1280786003;
        iArr[196] = 791618072;
        iArr[197] = -1106372745;
        iArr[198] = -361419266;
        iArr[199] = -1962795103;
        iArr[200] = -442446833;
        iArr[201] = -1250986776;
        iArr[202] = 413987798;
        iArr[203] = -829824359;
        iArr[204] = -1264037920;
        iArr[205] = -49028937;
        iArr[206] = 2093235073;
        iArr[207] = -760370983;
        iArr[208] = 375366246;
        iArr[209] = -2137688315;
        iArr[210] = -1815317740;
        iArr[211] = 555357303;
        iArr[212] = -424861595;
        iArr[213] = 2008414854;
        iArr[214] = -950779147;
        iArr[215] = -73583153;
        iArr[216] = -338841844;
        iArr[217] = 2067696032;
        iArr[218] = -700376109;
        iArr[219] = -1373733303;
        iArr[220] = 2428461;
        iArr[221] = 544322398;
        iArr[222] = 577241275;
        iArr[223] = 1471733935;
        iArr[224] = 610547355;
        iArr[225] = -267798242;
        iArr[226] = 1432588573;
        iArr[227] = 1507829418;
        iArr[228] = 2025931657;
        iArr[229] = -648391809;
        iArr[230] = 545086370;
        iArr[231] = 48609733;
        iArr[232] = -2094660746;
        iArr[233] = 1653985193;
        iArr[234] = 298326376;
        iArr[235] = 1316178497;
        iArr[236] = -1287180854;
        iArr[237] = 2064951626;
        iArr[238] = 458293330;
        iArr[239] = -1705826027;
        iArr[240] = -703637697;
        iArr[241] = -1130641692;
        iArr[242] = 727753846;
        iArr[243] = -2115603456;
        iArr[244] = 146436021;
        iArr[245] = 1461446943;
        iArr[246] = -224990101;
        iArr[247] = 705550613;
        iArr[248] = -1235000031;
        iArr[249] = -407242314;
        iArr[250] = -13368018;
        iArr[251] = -981117340;
        iArr[252] = 1404054877;
        iArr[253] = -1449160799;
        iArr[254] = 146425753;
        iArr[255] = 1854211946;
        KS0 = iArr;
        int[] iArr2 = new int[SBOX_SK];
        // fill-array-data instruction
        iArr2[0] = 1266315497;
        iArr2[1] = -1246549692;
        iArr2[2] = -613086930;
        iArr2[3] = -1004984797;
        iArr2[4] = -1385257296;
        iArr2[5] = 1235738493;
        iArr2[6] = -1662099272;
        iArr2[7] = -1880247706;
        iArr2[8] = -324367247;
        iArr2[9] = 1771706367;
        iArr2[10] = 1449415276;
        iArr2[11] = -1028546847;
        iArr2[12] = 422970021;
        iArr2[13] = 1963543593;
        iArr2[14] = -1604775104;
        iArr2[15] = -468174274;
        iArr2[16] = 1062508698;
        iArr2[17] = 1531092325;
        iArr2[18] = 1804592342;
        iArr2[19] = -1711849514;
        iArr2[20] = -1580033017;
        iArr2[21] = -269995787;
        iArr2[22] = 1294809318;
        iArr2[23] = -265986623;
        iArr2[24] = 1289560198;
        iArr2[25] = -2072974554;
        iArr2[26] = 1669523910;
        iArr2[27] = 35572830;
        iArr2[28] = 157838143;
        iArr2[29] = 1052438473;
        iArr2[30] = 1016535060;
        iArr2[31] = 1802137761;
        iArr2[32] = 1753167236;
        iArr2[33] = 1386275462;
        iArr2[34] = -1214491899;
        iArr2[35] = -1437595849;
        iArr2[36] = 1040679964;
        iArr2[37] = 2145300060;
        iArr2[38] = -1904392980;
        iArr2[39] = 1461121720;
        iArr2[40] = -1338320329;
        iArr2[41] = -263189491;
        iArr2[42] = -266592508;
        iArr2[43] = 33600511;
        iArr2[44] = -1374882534;
        iArr2[45] = 1018524850;
        iArr2[46] = 629373528;
        iArr2[47] = -603381315;
        iArr2[48] = -779021319;
        iArr2[49] = 2091462646;
        iArr2[50] = -1808644237;
        iArr2[51] = 586499841;
        iArr2[52] = 988145025;
        iArr2[53] = 935516892;
        iArr2[54] = -927631820;
        iArr2[55] = -1695294041;
        iArr2[56] = -1455136442;
        iArr2[57] = 265290510;
        iArr2[58] = -322386114;
        iArr2[59] = -1535828415;
        iArr2[60] = -499593831;
        iArr2[61] = 1005194799;
        iArr2[62] = 847297441;
        iArr2[63] = 406762289;
        iArr2[64] = 1314163512;
        iArr2[65] = 1332590856;
        iArr2[66] = 1866599683;
        iArr2[67] = -167115585;
        iArr2[68] = 750260880;
        iArr2[69] = 613907577;
        iArr2[70] = 1450815602;
        iArr2[71] = -1129346641;
        iArr2[72] = -560302305;
        iArr2[73] = -644675568;
        iArr2[74] = -1282691566;
        iArr2[75] = -590397650;
        iArr2[76] = 1427272223;
        iArr2[77] = 778793252;
        iArr2[78] = 1343938022;
        iArr2[79] = -1618686585;
        iArr2[80] = 2052605720;
        iArr2[81] = 1946737175;
        iArr2[82] = -1130390852;
        iArr2[83] = -380928628;
        iArr2[84] = -327488454;
        iArr2[85] = -612033030;
        iArr2[86] = 1661551462;
        iArr2[87] = -1000029230;
        iArr2[88] = -283371449;
        iArr2[89] = 840292616;
        iArr2[90] = -582796489;
        iArr2[91] = 616741398;
        iArr2[92] = 312560963;
        iArr2[93] = 711312465;
        iArr2[94] = 1351876610;
        iArr2[95] = 322626781;
        iArr2[96] = 1910503582;
        iArr2[97] = 271666773;
        iArr2[98] = -2119403562;
        iArr2[99] = 1594956187;
        iArr2[100] = 70604529;
        iArr2[101] = -677132437;
        iArr2[102] = 1007753275;
        iArr2[103] = 1495573769;
        iArr2[104] = -225450259;
        iArr2[105] = -1745748998;
        iArr2[106] = -1631928532;
        iArr2[107] = 504708206;
        iArr2[108] = -2031925904;
        iArr2[109] = -353800271;
        iArr2[110] = -2045878774;
        iArr2[111] = 1514023603;
        iArr2[112] = 1998579484;
        iArr2[113] = 1312622330;
        iArr2[114] = 694541497;
        iArr2[115] = -1712906993;
        iArr2[116] = -2143385130;
        iArr2[117] = 1382467621;
        iArr2[118] = 776784248;
        iArr2[119] = -1676627094;
        iArr2[120] = -971698502;
        iArr2[121] = -1797068168;
        iArr2[122] = -1510196141;
        iArr2[123] = 503983604;
        iArr2[124] = -218673497;
        iArr2[125] = 907881277;
        iArr2[126] = 423175695;
        iArr2[127] = 432175456;
        iArr2[128] = 1378068232;
        iArr2[129] = -149744970;
        iArr2[130] = -340918674;
        iArr2[131] = -356311194;
        iArr2[132] = -474200683;
        iArr2[133] = -1501837181;
        iArr2[134] = -1317062703;
        iArr2[135] = 26017576;
        iArr2[136] = -1020076561;
        iArr2[137] = -1100195163;
        iArr2[138] = 1700274565;
        iArr2[139] = 1756076034;
        iArr2[140] = -288447217;
        iArr2[141] = -617638597;
        iArr2[142] = 720338349;
        iArr2[143] = 1533947780;
        iArr2[144] = 354530856;
        iArr2[145] = 688349552;
        iArr2[146] = -321042571;
        iArr2[147] = 1637815568;
        iArr2[148] = 332179504;
        iArr2[149] = -345916010;
        iArr2[150] = 53804574;
        iArr2[151] = -1442618417;
        iArr2[152] = -1250730864;
        iArr2[153] = 1282449977;
        iArr2[154] = -711025141;
        iArr2[155] = -877994476;
        iArr2[156] = -288586052;
        iArr2[157] = 1617046695;
        iArr2[158] = -1666491221;
        iArr2[159] = -1292663698;
        iArr2[160] = 1686838959;
        iArr2[161] = 431878346;
        iArr2[162] = -1608291911;
        iArr2[163] = 1700445008;
        iArr2[164] = 1080580658;
        iArr2[165] = 1009431731;
        iArr2[166] = 832498133;
        iArr2[167] = -1071531785;
        iArr2[168] = -1688990951;
        iArr2[169] = -2023776103;
        iArr2[170] = -1778935426;
        iArr2[171] = 1648197032;
        iArr2[172] = -130578278;
        iArr2[173] = -1746719369;
        iArr2[174] = 300782431;
        iArr2[175] = 375919233;
        iArr2[176] = 238389289;
        iArr2[177] = -941219882;
        iArr2[178] = -1763778655;
        iArr2[179] = 2019080857;
        iArr2[180] = 1475708069;
        iArr2[181] = 455242339;
        iArr2[182] = -1685863425;
        iArr2[183] = 448939670;
        iArr2[184] = -843904277;
        iArr2[185] = 1395535956;
        iArr2[186] = -1881585436;
        iArr2[187] = 1841049896;
        iArr2[188] = 1491858159;
        iArr2[189] = 885456874;
        iArr2[190] = -30872223;
        iArr2[191] = -293847949;
        iArr2[192] = 1565136089;
        iArr2[193] = -396052509;
        iArr2[194] = 1108368660;
        iArr2[195] = 540939232;
        iArr2[196] = 1173283510;
        iArr2[197] = -1549095958;
        iArr2[198] = -613658859;
        iArr2[199] = -87339056;
        iArr2[200] = -951913406;
        iArr2[201] = -278217803;
        iArr2[202] = 1699691293;
        iArr2[203] = 1103962373;
        iArr2[204] = -669091426;
        iArr2[205] = -2038084153;
        iArr2[206] = -464828566;
        iArr2[207] = 1031889488;
        iArr2[208] = -815619598;
        iArr2[209] = 1535977030;
        iArr2[210] = -58162272;
        iArr2[211] = -1043876189;
        iArr2[212] = 2132092099;
        iArr2[213] = 1774941330;
        iArr2[214] = 1199868427;
        iArr2[215] = 1452454533;
        iArr2[216] = 157007616;
        iArr2[217] = -1390851939;
        iArr2[218] = 342012276;
        iArr2[219] = 595725824;
        iArr2[220] = 1480756522;
        iArr2[221] = 206960106;
        iArr2[222] = 497939518;
        iArr2[223] = 591360097;
        iArr2[224] = 863170706;
        iArr2[225] = -1919713727;
        iArr2[226] = -698356495;
        iArr2[227] = 1814182875;
        iArr2[228] = 2094937945;
        iArr2[229] = -873565088;
        iArr2[230] = 1082520231;
        iArr2[231] = -831049106;
        iArr2[232] = -1509457788;
        iArr2[233] = 435703966;
        iArr2[234] = -386934699;
        iArr2[235] = 1641649973;
        iArr2[236] = -1452693590;
        iArr2[237] = -989067582;
        iArr2[238] = 1510255612;
        iArr2[239] = -2146710820;
        iArr2[240] = -1639679442;
        iArr2[241] = -1018874748;
        iArr2[242] = -36346107;
        iArr2[243] = 236887753;
        iArr2[244] = -613164077;
        iArr2[245] = 274041037;
        iArr2[246] = 1734335097;
        iArr2[247] = -479771840;
        iArr2[248] = -976997275;
        iArr2[249] = 1899903192;
        iArr2[250] = 1026095262;
        iArr2[251] = -244449504;
        iArr2[252] = 356393447;
        iArr2[253] = -1884275382;
        iArr2[254] = -421290197;
        iArr2[255] = -612127241;
        KS1 = iArr2;
        int[] iArr3 = new int[SBOX_SK];
        // fill-array-data instruction
        iArr3[0] = -381855128;
        iArr3[1] = -1803468553;
        iArr3[2] = -162781668;
        iArr3[3] = -1805047500;
        iArr3[4] = 1091903735;
        iArr3[5] = 1979897079;
        iArr3[6] = -1124832466;
        iArr3[7] = -727580568;
        iArr3[8] = -737663887;
        iArr3[9] = 857797738;
        iArr3[10] = 1136121015;
        iArr3[11] = 1342202287;
        iArr3[12] = 507115054;
        iArr3[13] = -1759230650;
        iArr3[14] = 337727348;
        iArr3[15] = -1081374656;
        iArr3[16] = 1301675037;
        iArr3[17] = -1766485585;
        iArr3[18] = 1895095763;
        iArr3[19] = 1721773893;
        iArr3[20] = -1078195732;
        iArr3[21] = 62756741;
        iArr3[22] = 2142006736;
        iArr3[23] = 835421444;
        iArr3[24] = -1762973773;
        iArr3[25] = 1442658625;
        iArr3[26] = -635090970;
        iArr3[27] = -1412822374;
        iArr3[28] = 676362277;
        iArr3[29] = 1392781812;
        iArr3[30] = 170690266;
        iArr3[31] = -373920261;
        iArr3[32] = 1759253602;
        iArr3[33] = -683120384;
        iArr3[34] = 1745797284;
        iArr3[35] = 664899054;
        iArr3[36] = 1329594018;
        iArr3[37] = -393761396;
        iArr3[38] = -1249058810;
        iArr3[39] = 2062866102;
        iArr3[40] = -1429332356;
        iArr3[41] = -751345684;
        iArr3[42] = -830954599;
        iArr3[43] = 1080764994;
        iArr3[44] = 553557557;
        iArr3[45] = -638351943;
        iArr3[46] = -298199125;
        iArr3[47] = 991055499;
        iArr3[48] = 499776247;
        iArr3[49] = 1265440854;
        iArr3[50] = 648242737;
        iArr3[51] = -354183246;
        iArr3[52] = 980351604;
        iArr3[53] = -581221582;
        iArr3[54] = 1749149687;
        iArr3[55] = -898096901;
        iArr3[56] = -83167922;
        iArr3[57] = -654396521;
        iArr3[58] = 1161844396;
        iArr3[59] = -1169648345;
        iArr3[60] = 1431517754;
        iArr3[61] = 545492359;
        iArr3[62] = -26498633;
        iArr3[63] = -795437749;
        iArr3[64] = 1437099964;
        iArr3[65] = -1592419752;
        iArr3[66] = -861329053;
        iArr3[67] = -1713251533;
        iArr3[68] = -1507177898;
        iArr3[69] = 1060185593;
        iArr3[70] = 1593081372;
        iArr3[71] = -1876348548;
        iArr3[72] = -34019326;
        iArr3[73] = 69676912;
        iArr3[74] = -2135222948;
        iArr3[75] = 86519011;
        iArr3[76] = -1782508216;
        iArr3[77] = -456757982;
        iArr3[78] = 1220612927;
        iArr3[79] = -955283748;
        iArr3[80] = 133810670;
        iArr3[81] = 1090789135;
        iArr3[82] = 1078426020;
        iArr3[83] = 1569222167;
        iArr3[84] = 845107691;
        iArr3[85] = -711212847;
        iArr3[86] = -222510705;
        iArr3[87] = 1091646820;
        iArr3[88] = 628848692;
        iArr3[89] = 1613405280;
        iArr3[90] = -537335645;
        iArr3[91] = 526609435;
        iArr3[92] = 236106946;
        iArr3[93] = 48312990;
        iArr3[94] = -1352249391;
        iArr3[95] = -892239595;
        iArr3[96] = 1797494240;
        iArr3[97] = 859738849;
        iArr3[98] = 992217954;
        iArr3[99] = -289490654;
        iArr3[100] = -2051890674;
        iArr3[101] = -424014439;
        iArr3[102] = -562951028;
        iArr3[103] = 765654824;
        iArr3[104] = -804095931;
        iArr3[105] = -1783130883;
        iArr3[106] = 1685915746;
        iArr3[107] = -405998096;
        iArr3[108] = 1414112111;
        iArr3[109] = -2021832454;
        iArr3[110] = -1013056217;
        iArr3[111] = -214004450;
        iArr3[112] = 172450625;
        iArr3[113] = -1724973196;
        iArr3[114] = 980381355;
        iArr3[115] = -185008841;
        iArr3[116] = -1475158944;
        iArr3[117] = -1578377736;
        iArr3[118] = -1726226100;
        iArr3[119] = -613520627;
        iArr3[120] = -964995824;
        iArr3[121] = 1835478071;
        iArr3[122] = 660984891;
        iArr3[123] = -590288892;
        iArr3[124] = -248967737;
        iArr3[125] = -872349789;
        iArr3[126] = -1254551662;
        iArr3[127] = 1762651403;
        iArr3[128] = 1719377915;
        iArr3[129] = -824476260;
        iArr3[130] = -1601057013;
        iArr3[131] = -652910941;
        iArr3[132] = -1156370552;
        iArr3[133] = 1364962596;
        iArr3[134] = 2073328063;
        iArr3[135] = 1983633131;
        iArr3[136] = 926494387;
        iArr3[137] = -871278215;
        iArr3[138] = -2144935273;
        iArr3[139] = -198299347;
        iArr3[140] = 1749200295;
        iArr3[141] = -966120645;
        iArr3[142] = 309677260;
        iArr3[143] = 2016342300;
        iArr3[144] = 1779581495;
        iArr3[145] = -1215147545;
        iArr3[146] = 111262694;
        iArr3[147] = 1274766160;
        iArr3[148] = 443224088;
        iArr3[149] = 298511866;
        iArr3[150] = 1025883608;
        iArr3[151] = -488520759;
        iArr3[152] = 1145181785;
        iArr3[153] = 168956806;
        iArr3[154] = -653464466;
        iArr3[155] = -710153686;
        iArr3[156] = 1689216846;
        iArr3[157] = -628709281;
        iArr3[158] = -1094719096;
        iArr3[159] = 1692713982;
        iArr3[160] = -1648590761;
        iArr3[161] = -252198778;
        iArr3[162] = 1618508792;
        iArr3[163] = 1610833997;
        iArr3[164] = -771914938;
        iArr3[165] = -164094032;
        iArr3[166] = 2001055236;
        iArr3[167] = -684262196;
        iArr3[168] = -2092799181;
        iArr3[169] = -266425487;
        iArr3[170] = -1333771897;
        iArr3[171] = 1006657119;
        iArr3[172] = 2006996926;
        iArr3[173] = -1108824540;
        iArr3[174] = 1430667929;
        iArr3[175] = -1084739999;
        iArr3[176] = 1314452623;
        iArr3[177] = -220332638;
        iArr3[178] = -193663176;
        iArr3[179] = -2021016126;
        iArr3[180] = 1399257539;
        iArr3[181] = -927756684;
        iArr3[182] = -1267338667;
        iArr3[183] = 1190975929;
        iArr3[184] = 2062231137;
        iArr3[185] = -1960976508;
        iArr3[186] = -2073424263;
        iArr3[187] = -1856006686;
        iArr3[188] = 1181637006;
        iArr3[189] = 548689776;
        iArr3[190] = -1932175983;
        iArr3[191] = -922558900;
        iArr3[192] = -1190417183;
        iArr3[193] = -1149106736;
        iArr3[194] = 296247880;
        iArr3[195] = 1970579870;
        iArr3[196] = -1216407114;
        iArr3[197] = -525738999;
        iArr3[198] = 1714227617;
        iArr3[199] = -1003338189;
        iArr3[200] = -396747006;
        iArr3[201] = 166772364;
        iArr3[202] = 1251581989;
        iArr3[203] = 493813264;
        iArr3[204] = 448347421;
        iArr3[205] = 195405023;
        iArr3[206] = -1584991729;
        iArr3[207] = 677966185;
        iArr3[208] = -591930749;
        iArr3[209] = 1463355134;
        iArr3[210] = -1578971493;
        iArr3[211] = 1338867538;
        iArr3[212] = 1343315457;
        iArr3[213] = -1492745222;
        iArr3[214] = -1610435132;
        iArr3[215] = 233230375;
        iArr3[216] = -1694987225;
        iArr3[217] = 2000651841;
        iArr3[218] = -1017099258;
        iArr3[219] = 1638401717;
        iArr3[220] = -266896856;
        iArr3[221] = -1057650976;
        iArr3[222] = 6314154;
        iArr3[223] = 819756386;
        iArr3[224] = 300326615;
        iArr3[225] = 590932579;
        iArr3[226] = 1405279636;
        iArr3[227] = -1027467724;
        iArr3[228] = -1144263082;
        iArr3[229] = -1866680610;
        iArr3[230] = -335774303;
        iArr3[231] = -833020554;
        iArr3[232] = 1862657033;
        iArr3[233] = 1266418056;
        iArr3[234] = 963775037;
        iArr3[235] = 2089974820;
        iArr3[236] = -2031914401;
        iArr3[237] = 1917689273;
        iArr3[238] = 448879540;
        iArr3[239] = -744572676;
        iArr3[240] = -313240200;
        iArr3[241] = 150775221;
        iArr3[242] = -667058989;
        iArr3[243] = 1303187396;
        iArr3[244] = 508620638;
        iArr3[245] = -1318983944;
        iArr3[246] = -1568336679;
        iArr3[247] = 1817252668;
        iArr3[248] = 1876281319;
        iArr3[249] = 1457606340;
        iArr3[250] = 908771278;
        iArr3[251] = -574175177;
        iArr3[252] = -677760460;
        iArr3[253] = -1838972398;
        iArr3[254] = 1729034894;
        iArr3[255] = 1080033504;
        KS2 = iArr3;
        int[] iArr4 = new int[SBOX_SK];
        // fill-array-data instruction
        iArr4[0] = 976866871;
        iArr4[1] = -738527793;
        iArr4[2] = -1413318857;
        iArr4[3] = 1522871579;
        iArr4[4] = 1555064734;
        iArr4[5] = 1336096578;
        iArr4[6] = -746444992;
        iArr4[7] = -1715692610;
        iArr4[8] = -720269667;
        iArr4[9] = -1089506539;
        iArr4[10] = -701686658;
        iArr4[11] = -956251013;
        iArr4[12] = -1215554709;
        iArr4[13] = 564236357;
        iArr4[14] = -1301368386;
        iArr4[15] = 1781952180;
        iArr4[16] = 1464380207;
        iArr4[17] = -1131123079;
        iArr4[18] = -962365742;
        iArr4[19] = 1699332808;
        iArr4[20] = 1393555694;
        iArr4[21] = 1183702653;
        iArr4[22] = -713881059;
        iArr4[23] = 1288719814;
        iArr4[24] = 691649499;
        iArr4[25] = -1447410096;
        iArr4[26] = -1399511320;
        iArr4[27] = -1101077756;
        iArr4[28] = -1577396752;
        iArr4[29] = 1781354906;
        iArr4[30] = 1676643554;
        iArr4[31] = -1702433246;
        iArr4[32] = -1064713544;
        iArr4[33] = 1126444790;
        iArr4[34] = -1524759638;
        iArr4[35] = -1661808476;
        iArr4[36] = -2084544070;
        iArr4[37] = -1679201715;
        iArr4[38] = -1880812208;
        iArr4[39] = -1167828010;
        iArr4[40] = 673620729;
        iArr4[41] = -1489356063;
        iArr4[42] = 1269405062;
        iArr4[43] = -279616791;
        iArr4[44] = -953159725;
        iArr4[45] = -145557542;
        iArr4[46] = 1057255273;
        iArr4[47] = 2012875353;
        iArr4[48] = -2132498155;
        iArr4[49] = -2018474495;
        iArr4[50] = -1693849939;
        iArr4[51] = 993977747;
        iArr4[52] = -376373926;
        iArr4[53] = -1640704105;
        iArr4[54] = 753973209;
        iArr4[55] = 36408145;
        iArr4[56] = -1764381638;
        iArr4[57] = 25011837;
        iArr4[58] = -774947114;
        iArr4[59] = 2088578344;
        iArr4[60] = 530523599;
        iArr4[61] = -1376601957;
        iArr4[62] = 1524020338;
        iArr4[63] = 1518925132;
        iArr4[64] = -534139791;
        iArr4[65] = -535190042;
        iArr4[66] = 1202760957;
        iArr4[67] = -309069157;
        iArr4[68] = -388774771;
        iArr4[69] = 674977740;
        iArr4[70] = -120232407;
        iArr4[71] = 2031300136;
        iArr4[72] = 2019492241;
        iArr4[73] = -311074731;
        iArr4[74] = -141160892;
        iArr4[75] = -472686964;
        iArr4[76] = 352677332;
        iArr4[77] = -1997247046;
        iArr4[78] = 60907813;
        iArr4[79] = 90501309;
        iArr4[80] = -1007968747;
        iArr4[81] = 1016092578;
        iArr4[82] = -1759044884;
        iArr4[83] = -1455814870;
        iArr4[84] = 457141659;
        iArr4[85] = 509813237;
        iArr4[86] = -174299397;
        iArr4[87] = 652014361;
        iArr4[88] = 1966332200;
        iArr4[89] = -1319764491;
        iArr4[90] = 55981186;
        iArr4[91] = -1967506245;
        iArr4[92] = 676427537;
        iArr4[93] = -1039476232;
        iArr4[94] = -1412673177;
        iArr4[95] = -861040033;
        iArr4[96] = 1307055953;
        iArr4[97] = 942726286;
        iArr4[98] = 933058658;
        iArr4[99] = -1826555503;
        iArr4[100] = -361066302;
        iArr4[101] = -79791154;
        iArr4[102] = 1361170020;
        iArr4[103] = 2001714738;
        iArr4[104] = -1464409218;
        iArr4[105] = -1020707514;
        iArr4[106] = 1222529897;
        iArr4[107] = 1679025792;
        iArr4[108] = -1565652976;
        iArr4[109] = -580013532;
        iArr4[110] = 1770335741;
        iArr4[111] = 151462246;
        iArr4[112] = -1281735158;
        iArr4[113] = 1682292957;
        iArr4[114] = 1483529935;
        iArr4[115] = 471910574;
        iArr4[116] = 1539241949;
        iArr4[117] = 458788160;
        iArr4[118] = -858652289;
        iArr4[119] = 1807016891;
        iArr4[120] = -576558466;
        iArr4[121] = 978976581;
        iArr4[122] = 1043663428;
        iArr4[123] = -1129001515;
        iArr4[124] = 1927990952;
        iArr4[125] = -94075717;
        iArr4[126] = -1922690386;
        iArr4[127] = -1086558393;
        iArr4[128] = -761535389;
        iArr4[129] = 1412390302;
        iArr4[130] = -1362987237;
        iArr4[131] = -162634896;
        iArr4[132] = 1947078029;
        iArr4[133] = -413461673;
        iArr4[134] = -126740879;
        iArr4[135] = -1353482915;
        iArr4[136] = 1077988104;
        iArr4[137] = 1320477388;
        iArr4[138] = 886195818;
        iArr4[139] = 18198404;
        iArr4[140] = -508558296;
        iArr4[141] = -1785185763;
        iArr4[142] = 112762804;
        iArr4[143] = -831610808;
        iArr4[144] = 1866414978;
        iArr4[145] = 891333506;
        iArr4[146] = 18488651;
        iArr4[147] = 661792760;
        iArr4[148] = 1628790961;
        iArr4[149] = -409780260;
        iArr4[150] = -1153795797;
        iArr4[151] = 876946877;
        iArr4[152] = -1601685023;
        iArr4[153] = 1372485963;
        iArr4[154] = 791857591;
        iArr4[155] = -1608533303;
        iArr4[156] = -534984578;
        iArr4[157] = -1127755274;
        iArr4[158] = -822013501;
        iArr4[159] = -1578587449;
        iArr4[160] = 445679433;
        iArr4[161] = -732971622;
        iArr4[162] = -790962485;
        iArr4[163] = -720709064;
        iArr4[164] = 54117162;
        iArr4[165] = -963561881;
        iArr4[166] = -1913048708;
        iArr4[167] = -525259953;
        iArr4[168] = -140617289;
        iArr4[169] = 1140177722;
        iArr4[170] = -220915201;
        iArr4[171] = 668550556;
        iArr4[172] = -1080614356;
        iArr4[173] = 367459370;
        iArr4[174] = 261225585;
        iArr4[175] = -1684794075;
        iArr4[176] = -85617823;
        iArr4[177] = -826893077;
        iArr4[178] = -1029151655;
        iArr4[179] = 314222801;
        iArr4[180] = -1228863650;
        iArr4[181] = -486184436;
        iArr4[182] = 282218597;
        iArr4[183] = -888953790;
        iArr4[184] = -521376242;
        iArr4[185] = 379116347;
        iArr4[186] = 1285071038;
        iArr4[187] = 846784868;
        iArr4[188] = -1625320142;
        iArr4[189] = -523005217;
        iArr4[190] = -744475605;
        iArr4[191] = -1989021154;
        iArr4[192] = 453669953;
        iArr4[193] = 1268987020;
        iArr4[194] = -977374944;
        iArr4[195] = -1015663912;
        iArr4[196] = -550133875;
        iArr4[197] = -1684459730;
        iArr4[198] = -435458233;
        iArr4[199] = 266596637;
        iArr4[200] = -447948204;
        iArr4[201] = 517658769;
        iArr4[202] = -832407089;
        iArr4[203] = -851542417;
        iArr4[204] = 370717030;
        iArr4[205] = -47440635;
        iArr4[206] = -2070949179;
        iArr4[207] = -151313767;
        iArr4[208] = -182193321;
        iArr4[209] = -1506642397;
        iArr4[210] = -1817692879;
        iArr4[211] = 1456262402;
        iArr4[212] = -1393524382;
        iArr4[213] = 1517677493;
        iArr4[214] = 1846949527;
        iArr4[215] = -1999473716;
        iArr4[216] = -560569710;
        iArr4[217] = -2118563376;
        iArr4[218] = 1280348187;
        iArr4[219] = 1908823572;
        iArr4[220] = -423180355;
        iArr4[221] = 846861322;
        iArr4[222] = 1172426758;
        iArr4[223] = -1007518822;
        iArr4[224] = -911584259;
        iArr4[225] = 1655181056;
        iArr4[226] = -1155153950;
        iArr4[227] = 901632758;
        iArr4[228] = 1897031941;
        iArr4[229] = -1308360158;
        iArr4[230] = -1228157060;
        iArr4[231] = -847864789;
        iArr4[232] = 1393639104;
        iArr4[233] = 373351379;
        iArr4[234] = 950779232;
        iArr4[235] = 625454576;
        iArr4[236] = -1170726756;
        iArr4[237] = -146354570;
        iArr4[238] = 2007998917;
        iArr4[239] = 544563296;
        iArr4[240] = -2050228658;
        iArr4[241] = -1964470824;
        iArr4[242] = 2058025392;
        iArr4[243] = 1291430526;
        iArr4[244] = 424198748;
        iArr4[245] = 50039436;
        iArr4[246] = 29584100;
        iArr4[247] = -689184263;
        iArr4[248] = -1865090967;
        iArr4[249] = -1503863136;
        iArr4[250] = 1057563949;
        iArr4[251] = -1039604065;
        iArr4[252] = -1219600078;
        iArr4[253] = -831004069;
        iArr4[254] = 1469046755;
        iArr4[255] = 985887462;
        KS3 = iArr4;
    }

    public void init(boolean encrypting2, CipherParameters params) {
        if (params instanceof KeyParameter) {
            this.encrypting = encrypting2;
            this.workingKey = ((KeyParameter) params).getKey();
            setKey(this.workingKey);
            return;
        }
        throw new IllegalArgumentException("invalid parameter passed to Blowfish init - " + params.getClass().getName());
    }

    public String getAlgorithmName() {
        return "Blowfish";
    }

    public final int processBlock(byte[] in, int inOff, byte[] out, int outOff) {
        if (this.workingKey == null) {
            throw new IllegalStateException("Blowfish not initialised");
        } else if (inOff + 8 > in.length) {
            throw new DataLengthException("input buffer too short");
        } else if (outOff + 8 <= out.length) {
            if (this.encrypting) {
                encryptBlock(in, inOff, out, outOff);
            } else {
                decryptBlock(in, inOff, out, outOff);
            }
            return 8;
        } else {
            throw new OutputLengthException("output buffer too short");
        }
    }

    public void reset() {
    }

    public int getBlockSize() {
        return 8;
    }

    private int F(int x) {
        return ((this.S0[x >>> 24] + this.S1[(x >>> 16) & 255]) ^ this.S2[(x >>> 8) & 255]) + this.S3[x & 255];
    }

    private void processTable(int xl, int xr, int[] table) {
        int size = table.length;
        int xr2 = xr;
        int xl2 = xl;
        for (int s = 0; s < size; s += 2) {
            int xl3 = xl2 ^ this.P[0];
            for (int i = 1; i < 16; i += 2) {
                xr2 ^= F(xl3) ^ this.P[i];
                xl3 ^= F(xr2) ^ this.P[i + 1];
            }
            table[s] = xr2 ^ this.P[17];
            table[s + 1] = xl3;
            xr2 = xl3;
            xl2 = table[s];
        }
    }

    private void setKey(byte[] key) {
        System.arraycopy(KS0, 0, this.S0, 0, SBOX_SK);
        System.arraycopy(KS1, 0, this.S1, 0, SBOX_SK);
        System.arraycopy(KS2, 0, this.S2, 0, SBOX_SK);
        System.arraycopy(KS3, 0, this.S3, 0, SBOX_SK);
        System.arraycopy(KP, 0, this.P, 0, 18);
        int keyLength = key.length;
        int keyIndex = 0;
        int i = 0;
        while (i < 18) {
            int data = 0;
            int keyIndex2 = keyIndex;
            for (int j = 0; j < 4; j++) {
                int keyIndex3 = keyIndex2 + 1;
                data = (data << 8) | (key[keyIndex2] & 255);
                if (keyIndex3 >= keyLength) {
                    keyIndex2 = 0;
                } else {
                    keyIndex2 = keyIndex3;
                }
            }
            int[] iArr = this.P;
            iArr[i] = iArr[i] ^ data;
            i++;
            keyIndex = keyIndex2;
        }
        processTable(0, 0, this.P);
        processTable(this.P[16], this.P[17], this.S0);
        processTable(this.S0[254], this.S0[255], this.S1);
        processTable(this.S1[254], this.S1[255], this.S2);
        processTable(this.S2[254], this.S2[255], this.S3);
    }

    private void encryptBlock(byte[] src, int srcIndex, byte[] dst, int dstIndex) {
        int xl = BytesTo32bits(src, srcIndex);
        int xr = BytesTo32bits(src, srcIndex + 4);
        int xl2 = xl ^ this.P[0];
        for (int i = 1; i < 16; i += 2) {
            xr ^= F(xl2) ^ this.P[i];
            xl2 ^= F(xr) ^ this.P[i + 1];
        }
        Bits32ToBytes(xr ^ this.P[17], dst, dstIndex);
        Bits32ToBytes(xl2, dst, dstIndex + 4);
    }

    private void decryptBlock(byte[] src, int srcIndex, byte[] dst, int dstIndex) {
        int xl = BytesTo32bits(src, srcIndex);
        int xr = BytesTo32bits(src, srcIndex + 4);
        int xl2 = xl ^ this.P[17];
        for (int i = 16; i > 0; i -= 2) {
            xr ^= F(xl2) ^ this.P[i];
            xl2 ^= F(xr) ^ this.P[i - 1];
        }
        Bits32ToBytes(xr ^ this.P[0], dst, dstIndex);
        Bits32ToBytes(xl2, dst, dstIndex + 4);
    }

    private int BytesTo32bits(byte[] b, int i) {
        return ((b[i] & 255) << 24) | ((b[i + 1] & 255) << Tnaf.POW_2_WIDTH) | ((b[i + 2] & 255) << 8) | (b[i + 3] & 255);
    }

    private void Bits32ToBytes(int in, byte[] b, int offset) {
        b[offset + 3] = (byte) in;
        b[offset + 2] = (byte) (in >> 8);
        b[offset + 1] = (byte) (in >> 16);
        b[offset] = (byte) (in >> 24);
    }
}
